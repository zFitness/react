{"version":3,"file":"hook.js","mappings":"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","sources":["webpack://react-devtools-shared/webpack/bootstrap","webpack://react-devtools-shared/webpack/runtime/define property getters","webpack://react-devtools-shared/webpack/runtime/hasOwnProperty shorthand","webpack://react-devtools-shared/./src/hook.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Install the hook on window, which is an event emitter.\n * Note: this global hook __REACT_DEVTOOLS_GLOBAL_HOOK__ is a de facto public API.\n * It's especially important to avoid creating direct dependency on the DevTools Backend.\n * That's why we still inline the whole event emitter implementation,\n * the string format implementation, and part of the console implementation here.\n *\n * @flow\n */\n\nimport type {BrowserTheme} from './frontend/types';\nimport type {\n  DevToolsHook,\n  Handler,\n  ReactRenderer,\n  RendererID,\n  RendererInterface,\n  DevToolsBackend,\n} from './backend/types';\n\ndeclare var window: any;\n\nexport function installHook(target: any): DevToolsHook | null {\n  if (target.hasOwnProperty('__REACT_DEVTOOLS_GLOBAL_HOOK__')) {\n    return null;\n  }\n\n  let targetConsole: Object = console;\n  let targetConsoleMethods: {[string]: $FlowFixMe} = {};\n  for (const method in console) {\n    targetConsoleMethods[method] = console[method];\n  }\n\n  function dangerous_setTargetConsoleForTesting(\n    targetConsoleForTesting: Object,\n  ): void {\n    targetConsole = targetConsoleForTesting;\n\n    targetConsoleMethods = ({}: {[string]: $FlowFixMe});\n    for (const method in targetConsole) {\n      targetConsoleMethods[method] = console[method];\n    }\n  }\n\n  function detectReactBuildType(renderer: ReactRenderer) {\n    try {\n      if (typeof renderer.version === 'string') {\n        // React DOM Fiber (16+)\n        if (renderer.bundleType > 0) {\n          // This is not a production build.\n          // We are currently only using 0 (PROD) and 1 (DEV)\n          // but might add 2 (PROFILE) in the future.\n          return 'development';\n        }\n\n        // React 16 uses flat bundles. If we report the bundle as production\n        // version, it means we also minified and envified it ourselves.\n        return 'production';\n        // Note: There is still a risk that the CommonJS entry point has not\n        // been envified or uglified. In this case the user would have *both*\n        // development and production bundle, but only the prod one would run.\n        // This would be really bad. We have a separate check for this because\n        // it happens *outside* of the renderer injection. See `checkDCE` below.\n      }\n\n      // $FlowFixMe[method-unbinding]\n      const toString = Function.prototype.toString;\n      if (renderer.Mount && renderer.Mount._renderNewRootComponent) {\n        // React DOM Stack\n        const renderRootCode = toString.call(\n          renderer.Mount._renderNewRootComponent,\n        );\n        // Filter out bad results (if that is even possible):\n        if (renderRootCode.indexOf('function') !== 0) {\n          // Hope for the best if we're not sure.\n          return 'production';\n        }\n        // Check for React DOM Stack < 15.1.0 in development.\n        // If it contains \"storedMeasure\" call, it's wrapped in ReactPerf (DEV only).\n        // This would be true even if it's minified, as method name still matches.\n        if (renderRootCode.indexOf('storedMeasure') !== -1) {\n          return 'development';\n        }\n        // For other versions (and configurations) it's not so easy.\n        // Let's quickly exclude proper production builds.\n        // If it contains a warning message, it's either a DEV build,\n        // or an PROD build without proper dead code elimination.\n        if (renderRootCode.indexOf('should be a pure function') !== -1) {\n          // Now how do we tell a DEV build from a bad PROD build?\n          // If we see NODE_ENV, we're going to assume this is a dev build\n          // because most likely it is referring to an empty shim.\n          if (renderRootCode.indexOf('NODE_ENV') !== -1) {\n            return 'development';\n          }\n          // If we see \"development\", we're dealing with an envified DEV build\n          // (such as the official React DEV UMD).\n          if (renderRootCode.indexOf('development') !== -1) {\n            return 'development';\n          }\n          // I've seen process.env.NODE_ENV !== 'production' being smartly\n          // replaced by `true` in DEV by Webpack. I don't know how that\n          // works but we can safely guard against it because `true` was\n          // never used in the function source since it was written.\n          if (renderRootCode.indexOf('true') !== -1) {\n            return 'development';\n          }\n          // By now either it is a production build that has not been minified,\n          // or (worse) this is a minified development build using non-standard\n          // environment (e.g. \"staging\"). We're going to look at whether\n          // the function argument name is mangled:\n          if (\n            // 0.13 to 15\n            renderRootCode.indexOf('nextElement') !== -1 ||\n            // 0.12\n            renderRootCode.indexOf('nextComponent') !== -1\n          ) {\n            // We can't be certain whether this is a development build or not,\n            // but it is definitely unminified.\n            return 'unminified';\n          } else {\n            // This is likely a minified development build.\n            return 'development';\n          }\n        }\n        // By now we know that it's envified and dead code elimination worked,\n        // but what if it's still not minified? (Is this even possible?)\n        // Let's check matches for the first argument name.\n        if (\n          // 0.13 to 15\n          renderRootCode.indexOf('nextElement') !== -1 ||\n          // 0.12\n          renderRootCode.indexOf('nextComponent') !== -1\n        ) {\n          return 'unminified';\n        }\n        // Seems like we're using the production version.\n        // However, the branch above is Stack-only so this is 15 or earlier.\n        return 'outdated';\n      }\n    } catch (err) {\n      // Weird environments may exist.\n      // This code needs a higher fault tolerance\n      // because it runs even with closed DevTools.\n      // TODO: should we catch errors in all injected code, and not just this part?\n    }\n    return 'production';\n  }\n\n  function checkDCE(fn: Function) {\n    // This runs for production versions of React.\n    // Needs to be super safe.\n    try {\n      // $FlowFixMe[method-unbinding]\n      const toString = Function.prototype.toString;\n      const code = toString.call(fn);\n\n      // This is a string embedded in the passed function under DEV-only\n      // condition. However the function executes only in PROD. Therefore,\n      // if we see it, dead code elimination did not work.\n      if (code.indexOf('^_^') > -1) {\n        // Remember to report during next injection.\n        hasDetectedBadDCE = true;\n\n        // Bonus: throw an exception hoping that it gets picked up by a reporting system.\n        // Not synchronously so that it doesn't break the calling code.\n        setTimeout(function () {\n          throw new Error(\n            'React is running in production mode, but dead code ' +\n              'elimination has not been applied. Read how to correctly ' +\n              'configure React for production: ' +\n              'https://react.dev/link/perf-use-production-build',\n          );\n        });\n      }\n    } catch (err) {}\n  }\n\n  // NOTE: KEEP IN SYNC with src/backend/utils.js\n  function formatWithStyles(\n    inputArgs: $ReadOnlyArray<any>,\n    style?: string,\n  ): $ReadOnlyArray<any> {\n    if (\n      inputArgs === undefined ||\n      inputArgs === null ||\n      inputArgs.length === 0 ||\n      // Matches any of %c but not %%c\n      (typeof inputArgs[0] === 'string' &&\n        inputArgs[0].match(/([^%]|^)(%c)/g)) ||\n      style === undefined\n    ) {\n      return inputArgs;\n    }\n\n    // Matches any of %(o|O|d|i|s|f), but not %%(o|O|d|i|s|f)\n    const REGEXP = /([^%]|^)((%%)*)(%([oOdisf]))/g;\n    if (typeof inputArgs[0] === 'string' && inputArgs[0].match(REGEXP)) {\n      return [`%c${inputArgs[0]}`, style, ...inputArgs.slice(1)];\n    } else {\n      const firstArg = inputArgs.reduce((formatStr, elem, i) => {\n        if (i > 0) {\n          formatStr += ' ';\n        }\n        switch (typeof elem) {\n          case 'string':\n          case 'boolean':\n          case 'symbol':\n            return (formatStr += '%s');\n          case 'number':\n            const formatting = Number.isInteger(elem) ? '%i' : '%f';\n            return (formatStr += formatting);\n          default:\n            return (formatStr += '%o');\n        }\n      }, '%c');\n      return [firstArg, style, ...inputArgs];\n    }\n  }\n\n  let unpatchFn = null;\n\n  // NOTE: KEEP IN SYNC with src/backend/console.js:patchForStrictMode\n  // This function hides or dims console logs during the initial double renderer\n  // in Strict Mode. We need this function because during initial render,\n  // React and DevTools are connecting and the renderer interface isn't avaiable\n  // and we want to be able to have consistent logging behavior for double logs\n  // during the initial renderer.\n  function patchConsoleForInitialCommitInStrictMode({\n    hideConsoleLogsInStrictMode,\n    browserTheme,\n  }: {\n    hideConsoleLogsInStrictMode: boolean,\n    browserTheme: BrowserTheme,\n  }) {\n    const overrideConsoleMethods = [\n      'error',\n      'group',\n      'groupCollapsed',\n      'info',\n      'log',\n      'trace',\n      'warn',\n    ];\n\n    if (unpatchFn !== null) {\n      // Don't patch twice.\n      return;\n    }\n\n    const originalConsoleMethods: {[string]: $FlowFixMe} = {};\n\n    unpatchFn = () => {\n      for (const method in originalConsoleMethods) {\n        try {\n          targetConsole[method] = originalConsoleMethods[method];\n        } catch (error) {}\n      }\n    };\n\n    overrideConsoleMethods.forEach(method => {\n      try {\n        const originalMethod = (originalConsoleMethods[method] = targetConsole[\n          method\n        ].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__\n          ? targetConsole[method].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__\n          : targetConsole[method]);\n\n        const overrideMethod = (...args: $ReadOnlyArray<any>) => {\n          if (!hideConsoleLogsInStrictMode) {\n            // Dim the text color of the double logs if we're not\n            // hiding them.\n            let color;\n            switch (method) {\n              case 'warn':\n                color =\n                  browserTheme === 'light'\n                    ? process.env.LIGHT_MODE_DIMMED_WARNING_COLOR\n                    : process.env.DARK_MODE_DIMMED_WARNING_COLOR;\n                break;\n              case 'error':\n                color =\n                  browserTheme === 'light'\n                    ? process.env.LIGHT_MODE_DIMMED_ERROR_COLOR\n                    : process.env.DARK_MODE_DIMMED_ERROR_COLOR;\n                break;\n              case 'log':\n              default:\n                color =\n                  browserTheme === 'light'\n                    ? process.env.LIGHT_MODE_DIMMED_LOG_COLOR\n                    : process.env.DARK_MODE_DIMMED_LOG_COLOR;\n                break;\n            }\n\n            if (color) {\n              originalMethod(...formatWithStyles(args, `color: ${color}`));\n            } else {\n              throw Error('Console color is not defined');\n            }\n          }\n        };\n\n        overrideMethod.__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ =\n          originalMethod;\n        originalMethod.__REACT_DEVTOOLS_STRICT_MODE_OVERRIDE_METHOD__ =\n          overrideMethod;\n\n        targetConsole[method] = overrideMethod;\n      } catch (error) {}\n    });\n  }\n\n  // NOTE: KEEP IN SYNC with src/backend/console.js:unpatchForStrictMode\n  function unpatchConsoleForInitialCommitInStrictMode() {\n    if (unpatchFn !== null) {\n      unpatchFn();\n      unpatchFn = null;\n    }\n  }\n\n  let uidCounter = 0;\n\n  function inject(renderer: ReactRenderer): number {\n    const id = ++uidCounter;\n    renderers.set(id, renderer);\n\n    const reactBuildType = hasDetectedBadDCE\n      ? 'deadcode'\n      : detectReactBuildType(renderer);\n\n    // Patching the console enables DevTools to do a few useful things:\n    // * Append component stacks to warnings and error messages\n    // * Disabling or marking logs during a double render in Strict Mode\n    // * Disable logging during re-renders to inspect hooks (see inspectHooksOfFiber)\n    //\n    // Allow patching console early (during injection) to\n    // provide developers with components stacks even if they don't run DevTools.\n    if (target.hasOwnProperty('__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__')) {\n      const {registerRendererWithConsole, patchConsoleUsingWindowValues} =\n        target.__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__;\n      if (\n        typeof registerRendererWithConsole === 'function' &&\n        typeof patchConsoleUsingWindowValues === 'function'\n      ) {\n        registerRendererWithConsole(renderer);\n        patchConsoleUsingWindowValues();\n      }\n    }\n\n    // If we have just reloaded to profile, we need to inject the renderer interface before the app loads.\n    // Otherwise the renderer won't yet exist and we can skip this step.\n    const attach = target.__REACT_DEVTOOLS_ATTACH__;\n    if (typeof attach === 'function') {\n      const rendererInterface = attach(hook, id, renderer, target);\n      hook.rendererInterfaces.set(id, rendererInterface);\n    }\n\n    hook.emit('renderer', {\n      id,\n      renderer,\n      reactBuildType,\n    });\n\n    return id;\n  }\n\n  let hasDetectedBadDCE = false;\n\n  function sub(event: string, fn: Handler) {\n    hook.on(event, fn);\n    return () => hook.off(event, fn);\n  }\n\n  function on(event: string, fn: Handler) {\n    if (!listeners[event]) {\n      listeners[event] = [];\n    }\n    listeners[event].push(fn);\n  }\n\n  function off(event: string, fn: Handler) {\n    if (!listeners[event]) {\n      return;\n    }\n    const index = listeners[event].indexOf(fn);\n    if (index !== -1) {\n      listeners[event].splice(index, 1);\n    }\n    if (!listeners[event].length) {\n      delete listeners[event];\n    }\n  }\n\n  function emit(event: string, data: any) {\n    if (listeners[event]) {\n      listeners[event].map(fn => fn(data));\n    }\n  }\n\n  function getFiberRoots(rendererID: RendererID) {\n    const roots = fiberRoots;\n    if (!roots[rendererID]) {\n      roots[rendererID] = new Set();\n    }\n    return roots[rendererID];\n  }\n\n  function onCommitFiberUnmount(rendererID: RendererID, fiber: any) {\n    const rendererInterface = rendererInterfaces.get(rendererID);\n    if (rendererInterface != null) {\n      rendererInterface.handleCommitFiberUnmount(fiber);\n    }\n  }\n\n  function onCommitFiberRoot(\n    rendererID: RendererID,\n    root: any,\n    priorityLevel: void | number,\n  ) {\n    const mountedRoots = hook.getFiberRoots(rendererID);\n    const current = root.current;\n    const isKnownRoot = mountedRoots.has(root);\n    const isUnmounting =\n      current.memoizedState == null || current.memoizedState.element == null;\n\n    // Keep track of mounted roots so we can hydrate when DevTools connect.\n    if (!isKnownRoot && !isUnmounting) {\n      mountedRoots.add(root);\n    } else if (isKnownRoot && isUnmounting) {\n      mountedRoots.delete(root);\n    }\n    const rendererInterface = rendererInterfaces.get(rendererID);\n    if (rendererInterface != null) {\n      rendererInterface.handleCommitFiberRoot(root, priorityLevel);\n    }\n  }\n\n  function onPostCommitFiberRoot(rendererID: RendererID, root: any) {\n    const rendererInterface = rendererInterfaces.get(rendererID);\n    if (rendererInterface != null) {\n      rendererInterface.handlePostCommitFiberRoot(root);\n    }\n  }\n\n  function setStrictMode(rendererID: RendererID, isStrictMode: any) {\n    const rendererInterface = rendererInterfaces.get(rendererID);\n    if (rendererInterface != null) {\n      if (isStrictMode) {\n        rendererInterface.patchConsoleForStrictMode();\n      } else {\n        rendererInterface.unpatchConsoleForStrictMode();\n      }\n    } else {\n      // This should only happen during initial commit in the extension before DevTools\n      // finishes its handshake with the injected renderer\n      if (isStrictMode) {\n        const hideConsoleLogsInStrictMode =\n          window.__REACT_DEVTOOLS_HIDE_CONSOLE_LOGS_IN_STRICT_MODE__ === true;\n        const browserTheme = window.__REACT_DEVTOOLS_BROWSER_THEME__;\n\n        patchConsoleForInitialCommitInStrictMode({\n          hideConsoleLogsInStrictMode,\n          browserTheme,\n        });\n      } else {\n        unpatchConsoleForInitialCommitInStrictMode();\n      }\n    }\n  }\n\n  type StackFrameString = string;\n\n  const openModuleRangesStack: Array<StackFrameString> = [];\n  const moduleRanges: Array<[StackFrameString, StackFrameString]> = [];\n\n  function getTopStackFrameString(error: Error): StackFrameString | null {\n    const frames = error.stack.split('\\n');\n    const frame = frames.length > 1 ? frames[1] : null;\n    return frame;\n  }\n\n  function getInternalModuleRanges(): Array<\n    [StackFrameString, StackFrameString],\n  > {\n    return moduleRanges;\n  }\n\n  function registerInternalModuleStart(error: Error) {\n    const startStackFrame = getTopStackFrameString(error);\n    if (startStackFrame !== null) {\n      openModuleRangesStack.push(startStackFrame);\n    }\n  }\n\n  function registerInternalModuleStop(error: Error) {\n    if (openModuleRangesStack.length > 0) {\n      const startStackFrame = openModuleRangesStack.pop();\n      const stopStackFrame = getTopStackFrameString(error);\n      if (stopStackFrame !== null) {\n        moduleRanges.push([startStackFrame, stopStackFrame]);\n      }\n    }\n  }\n\n  // TODO: More meaningful names for \"rendererInterfaces\" and \"renderers\".\n  const fiberRoots: {[RendererID]: Set<mixed>} = {};\n  const rendererInterfaces = new Map<RendererID, RendererInterface>();\n  const listeners: {[string]: Array<Handler>} = {};\n  const renderers = new Map<RendererID, ReactRenderer>();\n  const backends = new Map<string, DevToolsBackend>();\n\n  const hook: DevToolsHook = {\n    rendererInterfaces,\n    listeners,\n\n    backends,\n\n    // Fast Refresh for web relies on this.\n    renderers,\n\n    emit,\n    getFiberRoots,\n    inject,\n    on,\n    off,\n    sub,\n\n    // This is a legacy flag.\n    // React v16 checks the hook for this to ensure DevTools is new enough.\n    supportsFiber: true,\n\n    // React calls these methods.\n    checkDCE,\n    onCommitFiberUnmount,\n    onCommitFiberRoot,\n    onPostCommitFiberRoot,\n    setStrictMode,\n\n    // Schedule Profiler runtime helpers.\n    // These internal React modules to report their own boundaries\n    // which in turn enables the profiler to dim or filter internal frames.\n    getInternalModuleRanges,\n    registerInternalModuleStart,\n    registerInternalModuleStop,\n  };\n\n  if (__TEST__) {\n    hook.dangerous_setTargetConsoleForTesting =\n      dangerous_setTargetConsoleForTesting;\n  }\n\n  Object.defineProperty(\n    target,\n    '__REACT_DEVTOOLS_GLOBAL_HOOK__',\n    ({\n      // This property needs to be configurable for the test environment,\n      // else we won't be able to delete and recreate it between tests.\n      configurable: __DEV__,\n      enumerable: false,\n      get() {\n        return hook;\n      },\n    }: Object),\n  );\n\n  return hook;\n}\n"],"names":["installHook","target","hasOwnProperty","targetConsole","console","targetConsoleMethods","method","dangerous_setTargetConsoleForTesting","targetConsoleForTesting","detectReactBuildType","renderer","version","bundleType","toString","Function","prototype","Mount","_renderNewRootComponent","renderRootCode","call","indexOf","err","checkDCE","fn","code","hasDetectedBadDCE","setTimeout","Error","formatWithStyles","inputArgs","style","undefined","length","match","REGEXP","slice","firstArg","reduce","formatStr","elem","i","formatting","Number","isInteger","unpatchFn","patchConsoleForInitialCommitInStrictMode","hideConsoleLogsInStrictMode","browserTheme","overrideConsoleMethods","originalConsoleMethods","error","forEach","originalMethod","__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__","overrideMethod","color","process","env","LIGHT_MODE_DIMMED_WARNING_COLOR","DARK_MODE_DIMMED_WARNING_COLOR","LIGHT_MODE_DIMMED_ERROR_COLOR","DARK_MODE_DIMMED_ERROR_COLOR","LIGHT_MODE_DIMMED_LOG_COLOR","DARK_MODE_DIMMED_LOG_COLOR","args","__REACT_DEVTOOLS_STRICT_MODE_OVERRIDE_METHOD__","unpatchConsoleForInitialCommitInStrictMode","uidCounter","inject","id","renderers","set","reactBuildType","__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__","registerRendererWithConsole","patchConsoleUsingWindowValues","attach","__REACT_DEVTOOLS_ATTACH__","rendererInterface","hook","rendererInterfaces","emit","sub","event","on","off","listeners","push","index","splice","data","map","getFiberRoots","rendererID","roots","fiberRoots","Set","onCommitFiberUnmount","fiber","get","handleCommitFiberUnmount","onCommitFiberRoot","root","priorityLevel","mountedRoots","current","isKnownRoot","has","isUnmounting","memoizedState","element","add","delete","handleCommitFiberRoot","onPostCommitFiberRoot","handlePostCommitFiberRoot","setStrictMode","isStrictMode","patchConsoleForStrictMode","unpatchConsoleForStrictMode","window","__REACT_DEVTOOLS_HIDE_CONSOLE_LOGS_IN_STRICT_MODE__","__REACT_DEVTOOLS_BROWSER_THEME__","openModuleRangesStack","moduleRanges","getTopStackFrameString","frames","stack","split","frame","getInternalModuleRanges","registerInternalModuleStart","startStackFrame","registerInternalModuleStop","pop","stopStackFrame","Map","backends","supportsFiber","__TEST__","Object","defineProperty","configurable","__DEV__","enumerable"],"sourceRoot":""}